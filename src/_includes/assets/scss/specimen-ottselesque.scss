@import "utilities/a11y";
@import "utilities/font-specimen";

$intro-bg-max-size: 32rem;

:root {
    --palette-01: #f5edda;
    --palette-02: #dac292;
    --palette-03: #37200e;
    --palette-04: #ad1202;
    --palette-05: #ff361a;
    --palette-06: #ec9d37;
    --palette-07: #ecd237;
    --body-font: Georgia, Cambria, 'Times New Roman', Times, serif;
    --color-main: var(--palette-01);
    --color-alt: var(--palette-02);
    --bg-main: var(--palette-03);
    --bg-alt: var(--palette-04);
    --link: var(--palette-07);
    --link-active: var(--palette-06);
}

h1 {
    font-size: 8rem;
    font-size: clamp(4rem, calc(4rem + (8 - 4) * ((100vw - 20rem) / (64 - 20))), 8rem);
    line-height: 1;
}

svg {
    max-width: 100%;
    height: auto;
}

li + li {
    margin-top: 0.25em;
}

ul > li::marker {
    content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E%3Cpath d='M10 9.614C10 13.48 7.761 16 5 16s-5-2.52-5-6.386S1.954 2 5 2s5 3.748 5 7.614z' fill='%23ec9d37'/%3E%3C/svg%3E%0A");
}

.main-heading-block {
    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
}

.main-heading-bg {
    position: absolute;

    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    width: 75%;
    max-width: $intro-bg-max-size;
    height: auto;
    margin: auto;

    @media (prefers-reduced-motion: no-preference) {
        animation: revealScale 1s cubic-bezier(0.215, 0.610, 0.355, 1) 1;    
    }
}

.main-heading-text {
    position: relative;

    display: inline-flex;
    flex-direction: column;
    justify-content: center;

    text-shadow:
        0 -2px 0 var(--bg-main),
        0 -1px 0 var(--bg-main),
        0  1px 0 var(--bg-main),
        0  2px 0 var(--bg-main),
    ;
}

.jak-daxter-silhouettes {
    width: 80%;
    max-width: 50vw;
    height: auto;
    margin: 1rem auto;
    
    fill: currentColor;
    stroke: var(--bg-main, transparent);
    stroke-width: 4px;
    paint-order: stroke;

    @media (prefers-reduced-motion: no-preference) {
        animation: revealUpwards 1s cubic-bezier(0.215, 0.610, 0.355, 1) 500ms 1 backwards;
    }
}

.main-heading-sub {
    display: flex;
    align-items: center;
    justify-content: center;

    &::before,
    &::after {
        flex: 1 1 auto;
        content: '';
        display: block;
        height: 1px;
        margin: 0 2em;

        background: currentColor;
    }
}

.portal * {
    fill: none;
    stroke: var(--color-main);
    stroke-width: 1.5;
}
.portal-ring {
    transform-origin: 50% 50%;

    @media (prefers-reduced-motion: no-preference) {
        animation: portalRing 60s linear infinite;
    }
}
.portal-ring-outer { animation-direction: reverse; }

@keyframes portalRing {
    to { transform: rotate(360deg); }
}

.preview-input-wrap {
    font-size: 1.5em;

    label { font-weight: bold; }
    
    input[type="text"],
    button {
        padding: 0.25em;
        
        font: inherit;
        color: var(--bg-alt, black);
        border: 2px solid var(--bg-main, black);
        border-radius: 4px;
        background: var(--color-alt, white);

        &:focus {
            outline: 2px solid var(--color-alt, yellow);
        }
    }

    button {
        text-transform: uppercase;

        box-shadow:
            inset 0 0 0 2px var(--color-alt, white),
            inset 0 0 0 4px var(--bg-main, black),
        ;
    }
}

.preview-option {
    input[type="checkbox"] + label::before {
        border-radius: 2px;
    }
}

[xlink\:href="#sample-text"][stroke] { user-select: none; }

.specimen { font-weight: 400; }
.specimen-set-demo { font-size: 3rem; }

@media screen and (min-width: #{ $content-max + $gutter * 4 }) {
    .content {
        background-image: url(./bg-gutter.png), url(./bg-gutter.png);
        background-size: #{ $gutter } auto;
        background-repeat: repeat-y;
        background-position:
            calc(50% - #{ $content-max * -.5 - $gutter * 2 }) 0,
            calc(50% + #{ $content-max * -.5 - $gutter * 2 }) 0,
        ;
    }
}

.download-button {
    --dl-button-depth: 0.325rem;
    --dl-button-offset: 0px;

    position: relative;

    font-weight: bold;
    text-decoration: none;
    color: var(--color-main);
    border-radius: 4em;

    transform: translateY(var(--dl-button-offset, 0px));

    @media (prefers-reduced-motion: no-preference) {
        transition: transform 300ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    &::before,
    &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        
        border-radius: inherit;

        transition: inherit;
    }

    &::before { // Button Face
        --boxshadow: inset 0 -1px 4px rgba(255,255,255,0.25), inset 0 0 1em rgba(0,0,0,0.5);
        
        z-index: -1;

        background: var(--palette-04) linear-gradient(rgba(0,0,0,0.325), rgba(0,0,0,0.5));
        box-shadow: var(--boxshadow);

        // transform: translateY(calc(var(--dl-button-offset, 0px) * -1));
    }

    &::after { // Button Depth
        z-index: -2;

        background: var(--palette-05) linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.25));
        box-shadow: inset 0 calc(var(--dl-button-depth) * -1) calc(var(--dl-button-depth) * 2) rgba(0,0,0,0.25);

        transform: translateY(calc(var(--dl-button-depth) + var(--dl-button-offset) * -1));
    }

    // & > span { position: relative; }
    
    &:hover,
    &:focus {
        --dl-button-offset: calc(var(--dl-button-depth) * -1);
        
        color: var(--color-main);
    }
    
    &:focus {
        outline: none;

        &::before { box-shadow: var(--boxshadow), 0 0 0 0.25rem currentColor; }
    }

    &:focus:not(:focus-visible) {
        &::before { box-shadow: var(--boxshadow); }
    }

    &:active {
        --dl-button-offset: var(--dl-button-depth);
    }
}

@keyframes revealScale {
    from {
        opacity: 0;
        transform: scale(0.5);
    }
}

@keyframes revealUpwards {
    from {
        opacity: 0;
        transform: translateY(25%);
    }
}