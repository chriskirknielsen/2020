.content-full {
    position: relative;
    left: calc(50% - 50vw);
    width: 100vw;
}

.content {
    $gutter: $spacing * 2;
    $max: $container-max-width-rem;
    $wide-max: $wide-content-max-width-rem;
    $column-width: $max - ($gutter * 2);

    max-width: #{ $max };
    margin-left: auto;
    margin-right: auto;

    & > * {
        padding-left: #{ $gutter };
        padding-right: #{ $gutter };
    }

    @supports (display: grid) {
        display: grid;
        grid-template-columns:
            [fullbleed-start]
                1fr
            [wide-start]
                #{ $gutter }
            [container-start]
                minmax(0, #{ $max })
            [container-end]
                #{ $gutter }
            [wide-end]
                1fr
            [fullbleed-end]
        ;

        max-width: 100%;
        margin-left: 0;
        margin-right: 0;

        & > * {
            grid-column: container-start / container-end;
            padding-left: 0;
            padding-right: 0;
        }
        
        &-wide {
            grid-column: wide-start / wide-end;
        }

        &-full {
            grid-column: fullbleed-start / fullbleed-end;

            // Reset the no-grid fallback
            left: initial;
            width: initial;
        }

        &-wide-limited {
            max-width: #{ $wide-max };
            margin-left: auto;
            margin-right: auto;
        }
    }

    &-sub {
        & > * {
            --content-sub-padding: max(0px, min((#{ $max + $gutter*2 } - 100%), #{ $gutter }));

            max-width: $container-max-width-rem;
            margin-left: auto;
            margin-right: auto;
            padding-left: var(--content-sub-padding, #{ $gutter });
            padding-right: var(--content-sub-padding, #{ $gutter });
        }

        @supports (grid-template-columns: subgrid) {
            display: grid;
            grid-template-columns: subgrid;
            grid-template-rows: 1fr;

            & > * {
                grid-column: container-start / container-end;

                // Reset the no-subgrid fallback
                max-width: 100%;
                width: 100%;
                margin-left: initial;
                margin-right: initial;
                padding-left: 0;
                padding-right: 0;
            }
        }
    }
}

// Define common styles for Prism and Codepen blocks, that will be oversized beyond the main container
pre:nth-child(n), // Ensure specificity is higher than .content>*
.cp_embed_wrapper {
    @extend .content-wide;
}

pre:nth-child(n) code, // Ensure specificity is higher than .content>*
.cp_embed_iframe {
    @extend .content-wide-limited;
}