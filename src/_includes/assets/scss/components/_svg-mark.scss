.svg-mark {
    $wire-s: &;
    $wire-count: 8;
    $wire-init-delay: 0s;
    $wire-step-delay: .0625s;
    $wire-anim-time: 1s;
    $wire-factor: .33;
    $wire-final-end: $wire-init-delay + $wire-step-delay * ($wire-count - 1) + $wire-anim-time;
    $flash-anim-delay: $wire-final-end - $wire-step-delay * $wire-count;
    $flash-anim-time: 1s;
    $chris-anim-time: 1.25s;
    $chris-anim-delay: $flash-anim-delay + $flash-anim-time/2;
    
    &__wires {
        transform-origin: 50% 50%;
    }

    &__wire {
        animation-name: svgMarkFadeInOut;
        animation-iteration-count: 1;
        animation-fill-mode: both;
        animation-duration: #{ $wire-anim-time };
        animation-timing-function: steps(1);

        @keyframes svgMarkFadeInOut {
            0% { opacity: 0; }
            50% { opacity: 1; }
            100% { opacity: 0; }
        }

        @for $w from 1 through $wire-count {
            &:nth-child(#{ $w }) {
                $w-i: ($w + 1) / ($wire-count + 1) * -1;
                $delay: $wire-step-delay * $w;
                $scale: 1 + (1/10 * ($wire-count - $w)) * $wire-factor;
                $translateY: 1 - $w-i*$w-i*$w-i;
                transform: scale(#{ $scale }) translateY(#{ $translateY * -2% * ($wire-count - $w) });
                animation-delay: #{ $wire-init-delay + $delay };
            }
        }
    }

    &_chris-flash {
        animation-name: svgMarkFadeInOut;
        animation-iteration-count: 1;
        animation-fill-mode: both;
        animation-duration: #{ $flash-anim-time };
        animation-timing-function: ease-in-out;
        animation-delay: #{ $flash-anim-delay };
    }

    &__group {
        animation-name: svgMarkTransform;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
    }

    &__chris-depth {
        animation-fill-mode: backwards;
        animation-direction: reverse;
        animation-duration: 1.25s;
        animation-delay: #{ $chris-anim-delay };
        animation-timing-function: cubic-bezier(0, 0, 1, 0);
    }

    &__chris-main {
        opacity: 0;
        animation-name: svgMarkTransform;
        animation-iteration-count: 1;
        animation-fill-mode: forwards;
        animation-duration: 0.1s;
        animation-delay: #{ $chris-anim-delay };
        animation-timing-function: steps(1);
    }

    &__chris-group {
        // transform: scale(.8);
        // animation-duration: 1.25s;
        // animation-delay: 1.5s;
        // animation-timing-function: cubic-bezier(0, 0, 0, 1);
    }

    &__kirknielsen-group {
        opacity: 0;
        transform: translate(-8%, 25%);
        animation-duration: .75s;
        animation-delay: 2s;
        animation-timing-function: cubic-bezier(0, 0, 0, 1);
    }

    &__creativedeveloper-group {
        opacity: 0;
        transform: translate(25%, 0);
        animation-duration: 1.5s;
        animation-delay: 2.5s;
        animation-timing-function: cubic-bezier(0, 0, 0, 1);
    }

    &__glare-group {
        transform-origin: 0 0;
        transform: translate(76%, 34.5%) rotate(30deg); // Translate coordinate are hard-coded based on SVG viewBox
    }
    &__glare {
        transform: scale(0, 0) rotate(-270deg);
        animation-duration: 1s;
        animation-delay: 3.75s;
        animation-timing-function: cubic-bezier(0, 0, 0, 1);
    }

    @keyframes svgMarkTransform {
        100% {
            opacity: 1;
            transform: none;
        }
    }



    &__name-shineOver {
        animation: shineOver 1.25s ease-in-out 3.5s 1 both;
    }

    &__name-shineOver--delayed {
        animation-duration: 1.325s;
        animation-delay: 3.75s;
    }

    @keyframes shineOver {
        0% { transform: translateX(82.5%); opacity: 0; visibility: hidden; }
        1% { opacity: 1; visibility: visible; }
        99% { opacity: 1; visibility: visible; }
        100% { transform: translateX(-82.5%); opacity: 0; visibility: hidden; }
    }
}
