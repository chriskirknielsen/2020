@mixin above-large {
    @media (min-width: #{$large-breakpoint-width}) {
        @content;
    }
}

@mixin above-medium {
    @media (min-width: #{$medium-breakpoint-width}) {
        @content;
    }
}

@mixin above-small {
    @media (min-width: #{$small-breakpoint-width}) {
        @content;
    }
}

// Function to automate the output based on the presence of a template string
@function template-value($value, $template: false, $tag: '{{value}}') {
    @if $template != false {
        @return #{ unquote(str-replace($template, $tag, $value)) };
    } @else {
        @return #{ $value };
    }
}

@mixin fluid($min, $max, $prop: 'font-size', $template: false, $tag: '{{value}}') {
    $breakpoint-min: $small-breakpoint-width-rem * 1rem;
    $breakpoint-max: $large-breakpoint-width-rem * 1rem;
    $prop: unquote($prop);

    #{$prop}: template-value($min, $template, $tag);

    @media screen and (min-width: #{$breakpoint-min}) {
        $val: fluid-unit($breakpoint-min, $breakpoint-max, $min, $max);
        #{$prop}: template-value($val, $template, $tag);
    }

    @media screen and (min-width: #{$breakpoint-max}) {
        #{$prop}: template-value($max, $template, $tag);
    }
}

@mixin fluid-type($min: 1rem, $max: 1.5rem) {
    @include fluid($min, $max);
}
