@mixin above-large {
    @media (min-width: #{ $large-breakpoint-width }) {
        @content;
    }
}

@mixin above-medium {
    @media (min-width: #{ $medium-breakpoint-width }) {
        @content;
    }
}

@mixin above-small {
    @media (min-width: #{ $small-breakpoint-width }) {
        @content;
    }
}

@mixin below-medium {
    @media (max-width: #{ $medium-breakpoint-width - 0.02 }) {
        @content;
    }
}

// Color Scheme
@mixin light-mode {
    html[data-scheme="dawn"] & {
        @content;
    }
}

@mixin dark-mode {
    html[data-scheme="dusk"] & {
        @content;
    }
}

// Function to automate the output based on the presence of a template string
@function template-value($value, $template: false, $tag: '{{value}}') {
    @if $template != false {
        @return #{ unquote(str-replace($template, $tag, $value)) };
    } @else {
        @return #{ $value };
    }
}

@mixin fluid($min, $max, $prop: 'font-size', $template: false, $tag: '{{value}}', $clamp: false) {
    $breakpoint-min: $small-breakpoint-width-rem * 1rem;
    $breakpoint-max: $large-breakpoint-width-rem * 1rem;
    $prop: unquote($prop);

    @if ($clamp == true) {
        $calc-val: fluid-unit($breakpoint-min, $breakpoint-max, $min, $max);
        $val: clamp(#{ if($min>$max, $max, $min) }, #{ $calc-val }, #{ if($min>$max, $min, $max) });
        #{$prop}: #{ $min }; // Fallback for browsers that don't support clamp
        #{$prop}: template-value($val, $template, $tag);
    }
    @else {
        #{$prop}: template-value($min, $template, $tag);

        @media screen and (min-width: #{$breakpoint-min}) {
            $val: fluid-unit($breakpoint-min, $breakpoint-max, $min, $max);
            #{$prop}: template-value($val, $template, $tag);
        }

        @media screen and (min-width: #{$breakpoint-max}) {
            #{$prop}: template-value($max, $template, $tag);
        }
    }
}

@mixin fluid-type($min-value, $max-value, $min-vw: $small-breakpoint-width-rem * 1rem, $max-vw: $large-breakpoint-width-rem * 1rem) {
    $factor: 1 / ($max-vw - $min-vw) * ($max-value - $min-value);
    $calc-value: unquote("#{ $min-value - ($min-vw * $factor) } + #{ 100vw * $factor }");

    font-size: $min-value; // Fallback for older browsers
    font-size: clamp(#{ if($min-value > $max-value, $max-value, $min-value) }, #{ $calc-value }, #{ if($min-value > $max-value, $min-value, $max-value) });
}