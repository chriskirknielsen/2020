body {
    font-family: f('body');
    font-size: 100%;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

// Set quote style
:lang(en) > q { quotes: '\201C' '\201D' '\2018' '\2019'; }
:lang(fr) > q { quotes: '« ' ' »'; }

h1,
h2,
h3,
h4,
h5,
h6,
.h {
    // @if (map-get(map-get($fonts, 'heading'), 'main') == 'IBM Plex Sans') {
    //     // Compensate for the large font's space on the line start
    //     margin-left: -.0625em;
    // }
    
    @if (f('heading') != f('body')) {
        // Don't declare the font family into heading elements if it's the same as the body
        font-family: f('heading');
    }

    font-weight: 700;
    line-height: 1.2;
    color: var(--c-primary-min);
    --currentColor: var(--c-primary-min);

    @if (map-get(map-get($fonts, 'heading'), 'main') == 'Marvin Visions Big') {
        // Keep the type tight, but not too tight
        letter-spacing: #{ $heading-font-letter-spacing };
    }
}

h1,
.h1 {
    $min: 1rem * pow($ratio, 5);
    $max: 1rem * pow($ratio, 6);

    @include fluid-type($min, $max);
}

h2,
.h2 {
    $min: 1rem * pow($ratio, 4);
    $max: 1rem * pow($ratio, 5);

    @include fluid-type($min, $max);
}

h3,
.h3 {
    $min: 1rem * pow($ratio, 3);
    $max: 1rem * pow($ratio, 4);

    @include fluid-type($min, $max);
}

h4,
.h4 {
    $min: 1rem * pow($ratio, 2);
    $max: 1rem * pow($ratio, 3);

    @include fluid-type($min, $max);
}

h5,
.h5 {
    $min: 1rem * $ratio;
    $max: 1rem * pow($ratio, 2);

    @include fluid-type($min, $max);
}

h6,
.h6 {
    $min: 1rem;
    $max: 1rem * $ratio;

    @include fluid-type($min, $max);
}

p {
    -ms-word-wrap: break-word;
    word-break: break-word; //non-standard css for webkit
    word-wrap: break-word;
    font-size-adjust: auto;

    overflow-wrap: break-word;
    word-wrap: break-word;
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
}

blockquote {
    border-left: #{ $spacing * .25 } solid var(--c-primary-min, currentColor);
    padding-left: #{ $spacing * 1.25 };

    > * + * {
        margin-top: #{ $spacing };
    }

    > :first-child::before {
        content: open-quote;
    }
    
    > :last-child::after {
        content: close-quote;
    }

    > :first-child::before,
    > :last-child::after {
        color: var(--c-primary-med, currentColor);
    }
}

hr {
    position: relative;

    width: 100%; // Required in a grid context
    height: .5rem;

    border: 0;

    &::before,
    &::after {
        content: '';
        position: absolute;
        left: 0;
        top: 0;

        width: 100%;
        height: 100%;
    }

    &::before {
        background: radial-gradient(closest-side, var(--c-secondary-med), transparent) no-repeat 50% 50% / 100% 100%;
    }
    
    &::after {
        background: linear-gradient(90deg, transparent, var(--color-text), transparent) no-repeat 50% 50% / 80% 1px;
        opacity: .75;
    }
}

::selection {
    color: var(--c-grey-max);
    background-color: var(--c-secondary-min);
}