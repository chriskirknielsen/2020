// Check for Houdini support, then register property for animation
@supports (background: paint(a)) {
    @property --ckn-sun-mask-lines {
        syntax: '<length-percentage>';
        initial-value: 0;
        inherits: true;
    }
}

.homescreen {
    --homescreen-sky-end: #791e74;
    --homescreen-floor-start: #1e0347;
    
    $grid-size: .5;
    $grid-line-anim-time: 4s;
    $sun-radius: 20vmin;
    $sun-blind-size: $sun-radius / 12;
    $screen-background: unquote('var(--c-primary-max)');
    $sky-start: #0a0634;
    $sky-start: unquote('var(--c-primary-max)');
    $sky-end: unquote('var(--homescreen-sky-end)');
    $floor-start: unquote('var(--homescreen-floor-start)');
    // $floor-start: unquote('var(--c-grey-max)');
    // $floor-color: unquote('var(--c-secondary-med)');
    $floor-color: c(secondary, med, 100, 'dusk');
    $floor-end: unquote('var(--c-primary-max)');
    $sun-top: #ed23af;
    $sun-middle: #ffafa3;
    $sun-bottom: #ffffe9;
    $sun-ref-top: #9d3472;
    $sun-ref-bottom: #3c0328;
    $sun-glow: $sun-top;
    // Hardcode all color values since we don't want this to be affected by color schemes
    
    @include light-mode {
        --homescreen-sky-end: #ecb43a;
        --homescreen-floor-start: hotpink;
    }

    min-height: #{ $sun-radius * 3 };

    &__background {
        $mask-gradient: gradient-stops($sc: #000, $sa: 1, $ec: #000, $ea: 0, $sp: 50%, $ep: 95%);

        $sun-fallback: radial-gradient(circle at 50% 100%,
            #{ $sun-bottom } 0,
            #{ $sun-middle } #{ $sun-radius / 2 },
            #{ $sun-top } #{ $sun-radius },
            #{ rgba($sun-glow, .5) } #{ $sun-radius },
            transparent #{ $sun-radius * 1.0625 },
        ) no-repeat 50% 0 / 100% 50%;

        $sun-mask-disk: radial-gradient(circle at 50% 50%,
            red #{ $sun-radius * 0.99 },
            transparent #{ $sun-radius * 1.01 }
        ) no-repeat 50% 50%;
        $sun-mask-lines: repeating-linear-gradient(
            red var(--ckn-sun-mask-lines),
            red calc( var(--ckn-sun-mask-lines) + #{ $sun-blind-size } ),
            transparent calc( var(--ckn-sun-mask-lines) + #{ $sun-blind-size } ),
            transparent calc( var(--ckn-sun-mask-lines) + #{ $sun-blind-size * 2 } ),
        ) repeat-x 50% 100% / 100% 50%;

        $sun-gradient: linear-gradient(180deg,
            #{ $sun-top } 0,
            #{ $sun-middle } 30%,
            #{ $sun-bottom } 50%,
            #{ $sun-ref-top } 50%,
            #{ $sun-ref-bottom } 100%,
        ) no-repeat 50% 50% / 100% #{ $sun-radius * 2 };
        $sun-glow-gradient: radial-gradient(circle at 50% 100%,
            #{ rgba($sun-glow, 0) } #{ $sun-radius * .875 },
            gradient-stops($sc: $sun-glow, $sa: 0, $ec: $sun-glow, $ea: .5, $sp: $sun-radius * .875, $ep: $sun-radius, $s: 6, $xb: true, $ease: 'in'),
            #{ rgba($sun-glow, .75) } #{ $sun-radius },
            gradient-stops($sc: $sun-glow, $sa: .75, $ec: $sun-glow, $ea: 0, $sp: $sun-radius, $ep: $sun-radius * 1.375, $s: 8, $xb: true, $ease: 'out'),
            #{ rgba($sun-glow, 0) } #{ $sun-radius * 1.25 },
        ) no-repeat 50% 0 / 100% 50%;

        /* Sky layer */
        background:
            // Horizon glow
            radial-gradient(ellipse 150% 20% at 50% 100%,
                gradient-stops($sc: $sun-glow, $sa: .75, $ec: $sun-glow, $ea: 0, $sp: 0%, $ep: 50%, $s: 12),
            ) no-repeat 50% 0 / 100% 50%,

            // Full sky
            linear-gradient(
                #{ $sky-start } 0%,
                #{ $sky-end } 50%,
                #{ $floor-start } 50%,
                #{ $floor-end } 100%,
            );
        background-color: $screen-background;

        // Fade out the grid at the bottom
        -webkit-mask-image: linear-gradient(#{ $mask-gradient });
        mask-image: linear-gradient(#{ $mask-gradient });

        /* Sun layer */
        &::before {
            background: #{ $sun-fallback };
        }

        @supports (mask-image: linear-gradient(0deg,red,red)) or (-webkit-mask-image: linear-gradient(0deg,red,red)) {
            &::before {
                background: #{ $sun-gradient };
                -webkit-mask: #{ $sun-mask-disk }, #{ $sun-mask-lines };
                -webkit-mask-composite: source-out;
                        mask: #{ $sun-mask-disk } subtract, #{ $sun-mask-lines };
            }

            &::after {
                background: #{ $sun-glow-gradient };
            }
        }

        /* Animating the sun's blinds */
        --ckn-sun-mask-lines: #{ $sun-blind-size * 0 }; // Set the default to 50% (0 because it is multiplied between [-1;1]) for browsers which don't support animatable custom properties
        // animation: sunMaskLines 2s linear infinite;
        
        // @keyframes sunMaskLines {
        //     0% { --ckn-sun-mask-lines: #{ $sun-blind-size * -1 }; }
        //     100% { --ckn-sun-mask-lines: #{ $sun-blind-size }; }
        // }

    }

    &__grid {
        top: #{ $grid-size * 100% };
        
        width: 100%;
        
        contain: content;

        &-lines {
            fill: none;
            stroke: #{ $floor-color };
            stroke-width: 1.5px;
            stroke-width: clamp(.75px, .1vw, 1.5px);

            filter: drop-shadow(0 0 .5vmin cyan);
            
            @include light-mode {
                stroke: c(secondary, max, 100, 'dawn');
            }

            & > * {
                vector-effect: non-scaling-stroke;
            }
        }
    }

    &__svg-wrapper {
        max-width: 100%; // Counter the default h1's max-width of 60ch

        > svg {
            width: 60rem;
            contain: content;
        }
    }
}
