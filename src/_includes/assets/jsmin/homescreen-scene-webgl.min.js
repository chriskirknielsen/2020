"use strict";!function(){var e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/three.js/95/three.min.js",document.body.appendChild(e),e.onload=function(){var e=window.sceneCanvas,a=function(){return{w:e.parentElement.clientWidth,h:e.parentElement.clientHeight}},t="#10c6bd",n=a(),i=n.w,o=n.h,l=new THREE.Scene,s=new THREE.PerspectiveCamera(60,i/o,.1,1e3);s.position.set(0,1,60),s.lookAt(new THREE.Vector3(0,.5,0));var m=new THREE.WebGLRenderer({canvas:e,antialias:!0});m.setSize(i,o);for(var c=new THREE.GridHelper(200,80,t,t),r=[],v=0;v<=80;v++)r.push(1,1,0,0);c.geometry.addAttribute("moveable",new THREE.BufferAttribute(new Uint8Array(r),1)),c.material=new THREE.ShaderMaterial({uniforms:{time:{value:0},limits:{value:new THREE.Vector2(-100,100)},speed:{value:5}},vertexShader:'\n                uniform float time;\n                uniform vec2 limits;\n                uniform float speed;\n                \n                attribute float moveable;\n                \n                varying vec3 vColor;\n            \n                void main() {\n                vColor = color;\n                float limLen = limits.y - limits.x;\n                vec3 pos = position;\n                if (floor(moveable + 0.5) > 0.5){ // if a point has "moveable" attribute = 1 \n                    float dist = speed * time;\n                    float currPos = mod((pos.z + dist) - limits.x, limLen) + limits.x;\n                    pos.z = currPos;\n                } \n                gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\n                }\n            ',fragmentShader:"\n                varying vec3 vColor;\n            \n                void main() {\n                gl_FragColor = vec4(vColor, 1.);\n                }\n            ",vertexColors:THREE.VertexColors}),l.add(c);var d=new THREE.Clock,u=0;!function e(){requestAnimationFrame(e);var t=a();u+=d.getDelta();c.material.uniforms.time.value=u;n=m,i=n.domElement,o=a(),r=i.width!==o.w||i.height!==o.h,r&&(s.aspect=t.w/t.h,s.updateProjectionMatrix(),m.setSize(t.w,t.h));var n,i,o,r;m.render(l,s)}()}}();